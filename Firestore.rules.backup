rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // DEMO MODE: Catch-all permissive rule for testing
    match /{document=**} {
      allow read, write: if true;
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // User profiles collection rules - DEMO MODE (PERMISSIVE)
    match /user_profiles/{userId} {
      allow read, write: if true; // DEMO: Full open access for testing
    }
    
    // Markets collection rules - DEMO MODE (PERMISSIVE)
    match /markets/{marketId} {
      allow read: if true; // Public read access for all markets
      allow write: if true; // DEMO: Full open access for testing
    }
    
    // Market schedules collection rules
    match /market_schedules/{scheduleId} {
      allow read: if true; // Public read access for market schedules
      allow write: if request.auth != null && isMarketOrganizer();
    }
    
    // Vendor applications collection rules
    match /vendor_applications/{applicationId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.vendorId ||
        isMarketOrganizerForMarket(resource.data.marketId)
      );
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.vendorId ||
        isMarketOrganizerForMarket(resource.data.marketId)
      );
    }
    
    // Managed vendors collection rules - DEMO MODE (PERMISSIVE)
    match /managed_vendors/{vendorId} {
      allow read, write: if true; // DEMO: Full open access for testing
    }
    
    // Vendor markets collection rules (many-to-many relationship)
    match /vendor_markets/{relationshipId} {
      allow read: if true; // Public read access
      allow write: if request.auth != null && isMarketOrganizer();
    }
    
    // Vendor posts collection rules - DEMO MODE (VERY PERMISSIVE)
    match /vendor_posts/{postId} {
      allow read, write: if true; // DEMO: Full open access for testing
    }
    
    // User favorites collection rules - DEMO MODE (PERMISSIVE)
    match /user_favorites/{favoriteId} {
      allow read, write: if true; // DEMO: Full open access for testing
    }
    
    // Recipes collection rules
    match /recipes/{recipeId} {
      allow read: if true; // Public read access for recipes
      allow write: if request.auth != null && isMarketOrganizer();
    }
    
    // Market analytics collection rules
    match /market_analytics/{analyticsId} {
      allow read, write: if request.auth != null && isMarketOrganizerForMarket(resource.data.marketId);
    }
    
    // Events collection rules - DEMO MODE (PERMISSIVE)
    match /events/{eventId} {
      allow read, write: if true; // DEMO: Full open access for testing
    }
    
    // Market events collection rules
    match /market_events/{eventId} {
      allow read: if true; // Public read access for events
      allow write: if request.auth != null && isMarketOrganizerForMarket(resource.data.marketId);
    }
    
    // Helper functions - DEMO MODE (PERMISSIVE)
    function isMarketOrganizer() {
      return request.auth != null; // DEMO: Allow any authenticated user
    }
    
    function isMarketOrganizerForMarket(marketId) {
      return request.auth != null; // DEMO: Allow any authenticated user
    }
  }
}